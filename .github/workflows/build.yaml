name: Build .NET Project

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "17"

      # - name: Use OpenSSL
      #   run: |
          # choco install openssl

      - name: Install certificate
        run: |
          dir C:\Windows\assembly\GAC_MSIL
          $dlls = @(
                "Microsoft.Office.Tools.Common.v9.0.dll",
                "Microsoft.Office.Tools.Excel.v9.0.dll",
                "Microsoft.Office.Tools.Outlook.v9.0.dll",
                "Microsoft.Office.Tools.v9.0.dll",
                "Microsoft.Office.Tools.Word.v9.0.dll",
                "Microsoft.Office.Interop.Excel.dll",
                "Microsoft.Office.Interop.Word.dll"
            )

            foreach ($dll in $dlls) {
                $result = Get-ChildItem -Path "HKLM:\SOFTWARE\Classes" -Recurse | Where-Object { $_.Name -match $dll }
                if ($result) {
                    Write-Output "$dll is registered."
                } else {
                    Write-Output "$dll is not registered."
                }
            }

          # openssl x509 -outform der -in '.\dummy-cert.pem' -out '.\dummy-cert.dem'
          # keytool -importcert -trustcacerts -file .\dummy-cert.dem -alias test -keystore "${{ env.JAVA_HOME }}\lib\security\cacerts" -storepass changeit -keypass changeit -noprompt

      - name: Install MSBuild
        # uses: microsoft/setup-msbuild@v1
        run: |
          # Step 1: Download the Visual Studio Build Tools installer
            # Invoke-WebRequest -Uri "https://aka.ms/vs/16/release/vs_buildtools.exe" -OutFile "C:\vs_buildtools.exe"

          # Step 2: Install the Visual Studio Build Tools with the specified components
            #   Start-Process -Wait -NoNewWindow -FilePath "C:\vs_buildtools.exe" -ArgumentList `
            #       "--installPath `"%ProgramFiles(x86)%\Microsoft Visual Studio\2022\BuildTools`"", `
            #       "--add Microsoft.Component.ClickOnce.MSBuild", `
            #       "--add Microsoft.Net.Component.4.8.SDK", `
            #       "--add Microsoft.NetCore.Component.Runtime.6.0", `
            #       "--add Microsoft.NetCore.Component.Runtime.7.0", `
            #       "--add Microsoft.NetCore.Component.Runtime.8.0", `
            #       "--add Microsoft.NetCore.Component.SDK", `
            #       "--add Microsoft.VisualStudio.Component.NuGet.BuildTools", `
            #       "--add Microsoft.VisualStudio.Component.WebDeploy", `
            #       "--add Microsoft.VisualStudio.Web.BuildTools.ComponentGroup", `
            #       "--add Microsoft.VisualStudio.Workload.MSBuildTools", `
            #       "--quiet", "--norestart", "--nocache", "--wait"

          # Step 3: Clean up by removing the installer file
            #   Remove-Item "C:\vs_buildtools.exe"

          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin"
            #   MSBuild.exe '.\dotnetapp-4.6.2.sln' -t:build -restore -p:RestorePackagesConfig=true
            #   MSBuild.exe '.\dotnetapp-4.6.2.sln'
          # git -v

    #   - name: Build with MSBuild
    # run: msbuild YourSolution.sln /p:Configuration=Release
